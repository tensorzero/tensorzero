name: Build and Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }} # for integration/E2E tests
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # for integration/E2E tests
  AWS_REGION: "us-east-1" # for integration/E2E tests
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # for integration/E2E tests
  AZURE_OPENAI_API_BASE: ${{secrets.AZURE_OPENAI_API_BASE }} # for integration/E2E tests
  AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }} # for integration/E2E tests
  AZURE_OPENAI_DEPLOYMENT_ID: ${{secrets.AZURE_OPENAI_DEPLOYMENT_ID }} # for integration/E2E tests
  CLICKHOUSE_URL: "http://localhost:8123" # for E2E tests
  FIREWORKS_API_KEY: ${{ secrets.FIREWORKS_API_KEY }} # for integration/E2E tests
  FORCE_COLOR: 1
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }} # for integration/E2E tests
  TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }} # for integration/E2E tests

jobs:
  run:
    runs-on: ubuntu-22.04-8core

    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Cargo Home
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/
            ~/.cargo/registry/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
          save-always: true

      - name: Build (Rust)
        run: cargo build --verbose

      - name: Lint (Rust)
        run: |
          cargo fmt -- --check
          cargo clippy --all-targets --all-features -- -D warnings

      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check bans

      - name: Test (Rust)
        if: github.ref != 'refs/heads/main'
        run: |
          cargo test

      - name: Launch containers for E2E tests
        if: github.ref == 'refs/heads/main'
        run: docker compose -f gateway/tests/e2e/docker-compose.yml up -d

      - name: Test (including integration and E2E) (Rust)
        if: github.ref == 'refs/heads/main'
        run: |
          cargo test --features integration_tests,e2e_tests
