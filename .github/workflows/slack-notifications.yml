name: Slack Notifications

permissions:
  issues: read
  pull-requests: read
  discussions: read

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]
  pull_request_target:
    types: [opened]
  pull_request_review:
    types: [submitted]
  discussion:
    types: [created]
  discussion_comment:
    types: [created]

jobs:
  notify-slack:
    if: github.repository == 'tensorzero/tensorzero'
    runs-on: ubuntu-latest

    steps:
      - name: Check if user should be skipped
        id: check-skip
        run: |
          SKIP_USERS="${{ vars.SLACK_NOTIFICATION_SKIP_USERS }}"
          ACTOR="${{ github.actor }}"

          # Check if user is a bot (ends with [bot], case insensitive)
          ACTOR_LOWER=$(echo "$ACTOR" | tr '[:upper:]' '[:lower:]')
          if [[ "$ACTOR_LOWER" == *"[bot]" ]]; then
            echo "should_skip=true" >> $GITHUB_OUTPUT
            echo "Skipping notification for bot user: $ACTOR"
            exit 0
          fi

          if [ -z "$SKIP_USERS" ]; then
            echo "should_skip=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Convert comma-separated list to array and check if actor is in the list (case insensitive)
          IFS=',' read -ra SKIP_ARRAY <<< "$SKIP_USERS"
          for skip_user in "${SKIP_ARRAY[@]}"; do
            # Trim whitespace and convert to lowercase
            skip_user=$(echo "$skip_user" | xargs | tr '[:upper:]' '[:lower:]')
            if [ "$skip_user" = "$ACTOR_LOWER" ]; then
              echo "should_skip=true" >> $GITHUB_OUTPUT
              echo "Skipping notification for user: $ACTOR"
              exit 0
            fi
          done

          echo "should_skip=false" >> $GITHUB_OUTPUT

      - name: Send Slack notification for new issue
        if: steps.check-skip.outputs.should_skip == 'false' && github.event_name == 'issues' && github.event.action == 'opened'
        uses: slackapi/slack-github-action@v2.1.1
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel": "C09HC3Q2XV2",
              "text": "üêõ New issue opened by ${{ github.actor }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üêõ *New issue opened*\n\n*Title:* <${{ github.event.issue.html_url }}|${{ github.event.issue.title }}>\n*Author:* <https://github.com/${{ github.actor }}|${{ github.actor }}>\n"
                  }
                }
              ]
            }

      - name: Send Slack notification for issue comment
        if: steps.check-skip.outputs.should_skip == 'false' && github.event_name == 'issue_comment'
        uses: slackapi/slack-github-action@v2.1.1
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel": "C09HC3Q2XV2",
              "text": "üí¨ New comment on issue by ${{ github.actor }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üí¨ *New comment on issue*\n\n*Issue:* <${{ github.event.issue.html_url }}|${{ github.event.issue.title }}>\n*Comment by:* <https://github.com/${{ github.actor }}|${{ github.actor }}>\n"
                  }
                }
              ]
            }

      - name: Send Slack notification for new pull request
        if: steps.check-skip.outputs.should_skip == 'false' && github.event_name == 'pull_request_target' && github.event.action == 'opened'
        uses: slackapi/slack-github-action@v2.1.1
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel": "C09HC3Q2XV2",
              "text": "üîÄ New pull request opened by ${{ github.actor }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üîÄ *New pull request opened*\n\n*Title:* <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>\n*Author:* <https://github.com/${{ github.actor }}|${{ github.actor }}>\n"
                  }
                }
              ]
            }


      - name: Send Slack notification for pull request review
        if: steps.check-skip.outputs.should_skip == 'false' && github.event_name == 'pull_request_review'
        uses: slackapi/slack-github-action@v2.1.1
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel": "C09HC3Q2XV2",
              "text": "üëÄ Pull request review submitted by ${{ github.actor }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üëÄ *Pull request review submitted*\n\n*PR:* <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>\n*Review by:* <https://github.com/${{ github.actor }}|${{ github.actor }}>\n*State:* ${{ github.event.review.state }}\n"
                  }
                }
              ]
            }

      - name: Send Slack notification for new discussion
        if: steps.check-skip.outputs.should_skip == 'false' && github.event_name == 'discussion' && github.event.action == 'created'
        uses: slackapi/slack-github-action@v2.1.1
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel": "C09HC3Q2XV2",
              "text": "üí≠ New discussion created by ${{ github.actor }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üí≠ *New discussion created*\n\n*Title:* <${{ github.event.discussion.html_url }}|${{ github.event.discussion.title }}>\n*Author:* <https://github.com/${{ github.actor }}|${{ github.actor }}>\n"
                  }
                }
              ]
            }

      - name: Send Slack notification for discussion comment
        if: steps.check-skip.outputs.should_skip == 'false' && github.event_name == 'discussion_comment'
        uses: slackapi/slack-github-action@v2.1.1
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel": "C09HC3Q2XV2",
              "text": "üí¨ New comment on discussion by ${{ github.actor }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üí¨ *New comment on discussion*\n\n*Discussion:* <${{ github.event.discussion.html_url }}|${{ github.event.discussion.title }}>\n*Comment by:* <https://github.com/${{ github.actor }}|${{ github.actor }}>\n"
                  }
                }
              ]
            }
