name: UI E2E Tests

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  ui-tests-e2e:
    runs-on: namespace-profile-tensorzero-8x16

    # We currently only run this job when we have secrets available, since we need to use an S3 object_store
    # In the future, we might want to fix this so that it can run in PR CI for external (forked) PRs
    # For now, it just runs in the merge queue and on prs from the main repo
    if: ${{ (github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]') || github.event_name == 'merge_group' }}

    steps:
      - uses: namespacelabs/nscloud-checkout-action@953fed31a6113cc2347ca69c9d823743c65bc84b

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: "22.9.0"

      - name: Setup `pnpm`
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda
        with:
          version: 10

      - name: Install `pnpm` dependencies
        working-directory: ui
        run: pnpm install --frozen-lockfile

      - name: Setup Playwright
        working-directory: ui
        run: pnpm exec playwright install --with-deps chromium

      - name: Cache `s3-fixtures`
        uses: namespacelabs/nscloud-cache-action@2f50e7d0f70475e6f59a55ba0f05eec9108e77cc
        with:
          path: |
            ./ui/fixtures/s3-fixtures

      - name: Download `gateway` container
        uses: namespace-actions/download-artifact@5c070f7d7ebdc47682b04aa736c76e46ff5f6e1e
        with:
          name: build-gateway-container

      - name: Download `ui` container
        uses: namespace-actions/download-artifact@5c070f7d7ebdc47682b04aa736c76e46ff5f6e1e
        with:
          name: build-ui-container

      - name: Load `gateway` and `ui` containers
        run: |
          docker load < gateway-container.tar
          docker load < ui-container.tar

      # This allows us to use 'no-build' on subsequent steps
      - name: Build needed docker images
        working-directory: ui
        run: |
          docker compose -f fixtures/docker-compose.e2e.yml -f fixtures/docker-compose.ui.yml build fixtures mock-inference-provider

      - name: Start Docker containers and apply fixtures
        working-directory: ui
        run: |
          echo "FIREWORKS_ACCOUNT_ID=fake_fireworks_account" >> fixtures/.env
          echo "FIREWORKS_API_KEY=not_used" >> fixtures/.env
          echo "FIREWORKS_BASE_URL=http://mock-inference-provider:3030/fireworks/" >> fixtures/.env
          echo "OPENAI_API_KEY=not_used" >> fixtures/.env
          echo "OPENAI_BASE_URL=http://mock-inference-provider:3030/openai/" >> fixtures/.env
          echo "S3_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> fixtures/.env
          echo "S3_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> fixtures/.env
          echo "TENSORZERO_CLICKHOUSE_URL=http://chuser:chpassword@clickhouse:8123/tensorzero_ui_fixtures" >> fixtures/.env
          echo "TENSORZERO_GATEWAY_URL=http://gateway:3000" >> fixtures/.env
          echo "TENSORZERO_GATEWAY_TAG=sha-${{ github.sha }}" >> fixtures/.env
          echo "TENSORZERO_UI_TAG=sha-${{ github.sha }}" >> fixtures/.env
          docker compose -f fixtures/docker-compose.e2e.yml -f fixtures/docker-compose.ui.yml up --no-build --wait

      - name: Run UI E2E tests
        id: e2e_tests
        working-directory: ui
        env:
          TENSORZERO_CI: 1
        continue-on-error: true
        run: pnpm test-e2e

      - name: Print Docker Compose logs
        if: always()
        working-directory: ui
        run: docker compose -f fixtures/docker-compose.e2e.yml -f fixtures/docker-compose.ui.yml logs -t

      - name: Print ClickHouse error logs
        if: always()
        run: docker exec fixtures-clickhouse-1 cat /var/log/clickhouse-server/clickhouse-server.err.log

      - name: Print ClickHouse trace logs
        if: always()
        run: docker exec fixtures-clickhouse-1 cat /var/log/clickhouse-server/clickhouse-server.log

      - name: Upload Playwright artifacts
        if: steps.e2e_tests.outcome == 'failure'
        uses: namespace-actions/upload-artifact@9a78c62e083914789d908952f9773e42744b9f68
        with:
          name: playwright-report
          path: |
            ui/playwright-report/
            ui/test-results/
          retention-days: 7

      - name: Exit if tests failed
        if: steps.e2e_tests.outcome == 'failure'
        run: exit 1
