# This workflow builds the PyO3-based native library across several platforms (using different runners),
# and then publishes the wheels to PyPi as a single release.
name: Publish PyO3 client to PyPI

on:
  workflow_dispatch:
  release:
    types: [released]

permissions:
  contents: read
  id-token: write

jobs:
  build-wheels:
    uses: ./.github/workflows/pyo3-build-reusable.yml
    permissions:
      contents: read
      id-token: write

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build-wheels]
    environment: pypi-publish
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    # Download all of the wheel artifacts published by the other jobs,
    # and publish them to PyPi as a new release, using the `upload-pyo3.sh` script.
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@92c65d2898f1f53cfdc910b962cecff86e7f8fcc
        with:
          subject-path: "wheels-*/*"

      - name: Publish to real PyPI (only on GitHub release)
        if: ${{ github.event_name == 'release' }}
        run: |
          ./ci/upload-pyo3.sh pypi

      - name: Publish to TestPyPI
        run: |
          ./ci/upload-pyo3.sh testpypi
