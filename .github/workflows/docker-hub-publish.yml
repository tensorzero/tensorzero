# This workflow builds and pushes the gateway, ui, and evaluations docker images to Docker Hub
# when we tag a release.
name: Publish docker images

on:
  workflow_dispatch:
  release:
    types: [published]
  push:
    branches: ["main"]

env:
  DOCKERHUB_USER: tensorzero
  # Set the container name to a '-dev' name when this workflow is invoked by a push event
  # Otherwise, use the unsuffixed name (which will be invoked by a release or manual dispatch)
  GATEWAY_CONTAINER: ${{ github.event_name == 'push' && 'gateway-dev' || 'gateway' }}
  EVALUATIONS_CONTAINER: ${{ github.event_name == 'push' && 'evaluations-dev' || 'evaluations' }}
  UI_CONTAINER: ${{ github.event_name == 'push' && 'ui-dev' || 'ui' }}

jobs:
  build:
    name: Build and push Docker image to Docker Hub
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-24.04
            target: linux/amd64
          - runner: ubuntu-24.04-arm
            target: linux/arm64
        container:
          - name: ${{ env.EVALUATIONS_CONTAINER }}
          - name: ${{ env.GATEWAY_CONTAINER }}
          - name: ${{ env.UI_CONTAINER }}
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Prepare
        run: |
          platform=${{ matrix.platform.target }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.container.name }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform.target }}
          file: ./${{ matrix.container.name }}/Dockerfile
          push: true
          provenance: mode=max
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          tags: ${{ env.DOCKERHUB_USER }}/${{ matrix.container.name }}
          labels: ${{ steps.meta.outputs.labels }}
          sbom: true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.push.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.container.name }}-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    strategy:
      matrix:
        container:
          - name: ${{ env.EVALUATIONS_CONTAINER }}
          - name: ${{ env.GATEWAY_CONTAINER }}
          - name: ${{ env.UI_CONTAINER }}
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-${{ matrix.container.name }}-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_USER }}/${{ matrix.container.name }}
          flavor: |
            latest=false
          tags: |
            type=ref,event=tag,
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.event_name == 'release' && github.event.prerelease == false }}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.DOCKERHUB_USER }}/${{ matrix.container.name }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_USER }}/${{ matrix.container.name }}:${{ steps.meta.outputs.version }}
