name: UI Tests

on:
  workflow_call:

jobs:
  ui-tests:
    runs-on: namespace-profile-tensorzero-8x16

    strategy:
      matrix:
        clickhouse_version: ["24.12-alpine", "25.2-alpine", "latest-alpine"]

    steps:
      - name: Set DNS
        run: echo "127.0.0.1 howdy.tensorzero.com" | sudo tee -a /etc/hosts

      - uses: namespacelabs/nscloud-checkout-action@953fed31a6113cc2347ca69c9d823743c65bc84b

      - uses: dtolnay/rust-toolchain@stable

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: "22.9.0"

      - name: Setup `pnpm`
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda

      - name: Install `pnpm` dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup the Namespace cache for `s3-fixtures`
        uses: namespacelabs/nscloud-cache-action@2f50e7d0f70475e6f59a55ba0f05eec9108e77cc
        with:
          path: |
            ./ui/fixtures/s3-fixtures

      - name: Setup `wasm-pack`
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build minijinja WASM bindings
        working-directory: ui/app/utils/minijinja
        run: wasm-pack build --features console_error_panic_hook

      - name: Build `tensorzero-node`
        working-directory: internal/tensorzero-node
        run: pnpm build

      - name: Download `gateway` container
        uses: namespace-actions/download-artifact@5c070f7d7ebdc47682b04aa736c76e46ff5f6e1e
        with:
          name: build-gateway-container
          path: .

      - name: Load `gateway` container
        run: docker load < gateway-container.tar

      - name: Start Docker containers and apply fixtures
        working-directory: ui
        run: |
          echo "FIREWORKS_ACCOUNT_ID=not_used" >> fixtures/.env
          echo "TENSORZERO_CLICKHOUSE_URL=http://chuser:chpassword@localhost:8123/tensorzero_ui_fixtures" >> fixtures/.env
          echo "TENSORZERO_GATEWAY_TAG=sha-${{ github.sha }}" >> fixtures/.env
          echo "TENSORZERO_UI_TAG=sha-${{ github.sha }}" >> fixtures/.env

          # Environment variables only used by the gateway container
          # We deliberately leave these unset when starting the UI container, to ensure
          # that it doesn't depend on them being set
          echo "FIREWORKS_API_KEY=not_used" >> fixtures/.env-gateway
          echo "OPENAI_API_KEY=not_used" >> fixtures/.env-gateway

          TENSORZERO_CLICKHOUSE_VERSION=${{ matrix.clickhouse_version }} docker compose -f fixtures/docker-compose.yml up -d
          docker compose -f fixtures/docker-compose.yml wait fixtures

      - name: Run `pnpm test`
        env:
          OPENAI_API_KEY: not_used
          FIREWORKS_API_KEY: not_used
          TENSORZERO_UI_CONFIG_PATH: fixtures/config/tensorzero.toml
          TENSORZERO_CLICKHOUSE_URL: http://chuser:chpassword@localhost:8123/tensorzero_ui_fixtures
          TENSORZERO_GATEWAY_URL: http://localhost:3000
        run: pnpm ui:test

      - name: Run `pnpm test` for tensorzero-node
        working-directory: internal/tensorzero-node
        run: pnpm test

      - name: Print Docker Compose logs
        if: always()
        working-directory: ui
        run: docker compose -f fixtures/docker-compose.yml logs -t

      - name: Make sure the current commit short hash is in the Docker Compose gateway logs
        if: always()
        working-directory: ui
        run: |
          SHORT_HASH=$(echo "${{ github.sha }}" | cut -c1-7)
          docker compose -f fixtures/docker-compose.yml logs gateway | grep "(commit: ${SHORT_HASH})" || {
            echo "ERROR: Commit hash ${SHORT_HASH} not found in gateway logs"
            exit 1
          }

      - name: Print ClickHouse error logs
        if: always()
        run: docker exec fixtures-clickhouse-1 cat /var/log/clickhouse-server/clickhouse-server.err.log

      - name: Print ClickHouse trace logs
        if: always()
        run: docker exec fixtures-clickhouse-1 cat /var/log/clickhouse-server/clickhouse-server.log
