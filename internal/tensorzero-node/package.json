{
  "name": "tensorzero-node",
  "version": "0.0.0",
  "type": "module",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js"
    }
  },
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "napi": {
    "name": "tensorzero-node",
    "triples": {
      "defaults": false,
      "additional": [
        "aarch64-apple-darwin",
        "aarch64-unknown-linux-gnu",
        "aarch64-unknown-linux-musl",
        "x86_64-apple-darwin",
        "x86_64-unknown-linux-gnu",
        "x86_64-unknown-linux-musl"
      ]
    }
  },
  "license": "Apache-2.0",
  "devDependencies": {
    "@eslint/js": "^9.23.0",
    "@napi-rs/cli": "^2.18.4",
    "@types/node": "^20.0.0",
    "eslint": "^9.23.0",
    "prettier": "^3.5.3",
    "typescript-eslint": "^8.29.0",
    "vitest": "^3.1.1"
  },
  "vitest": {
    "testTimeout": 180000
  },
  "engines": {
    "node": ">= 10"
  },
  "scripts": {
    "artifacts": "napi artifacts",
    "build-bindings": "find lib/bindings -type f \\( -name '*.ts' ! -name 'index.ts' \\) -o \\( -name '*.js' ! -name 'check-exports.js' ! -name 'generate-index.js' \\) -delete && find lib/bindings -type d -name 'serde_json' -exec rm -rf {} + 2>/dev/null || true && cd ../.. && TS_RS_EXPORT_DIR=\"../internal/tensorzero-node/lib/bindings\" cargo tsbuild && cd internal/tensorzero-node && node -e 'import(\"./lib/bindings/generate-index.js\").then(m => m.generateIndex())' && prettier --write \"lib/bindings/**/*.ts\"",
    "build": "pnpm run build-bindings && napi build --platform --release --js index.cjs && tsc",
    "build:debug": "pnpm run build-bindings && napi build --platform && tsc",
    "build:ts": "pnpm run build-bindings && tsc",
    "check-exports": "cd lib/bindings && node check-exports.js",
    "prepublishOnly": "napi prepublish -t npm",
    "test": "vitest",
    "typecheck": "tsc",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,css,scss,html,json,yaml,md}\" --ignore-path .prettierignore",
    "format:check": "prettier --check \"**/*.{js,jsx,ts,tsx,css,scss,html,json,yaml,md}\" --ignore-path .prettierignore",
    "lint": "eslint . --fix --max-warnings=0 --config eslint.config.js --cache --ignore-pattern \"dist/\" --ignore-pattern \"index.d.ts\"",
    "lint:check": "eslint . --max-warnings=0 --config eslint.config.js --cache --ignore-pattern \"dist/\" --ignore-pattern \"index.d.ts\"",
    "universal": "napi universal",
    "version": "napi version"
  }
}
