// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { AnthropicProviderTypeConfig } from "./AnthropicProviderTypeConfig";
import type { AzureProviderTypeConfig } from "./AzureProviderTypeConfig";
import type { DeepSeekProviderTypeConfig } from "./DeepSeekProviderTypeConfig";
import type { FireworksProviderTypeConfig } from "./FireworksProviderTypeConfig";
import type { GCPProviderTypeConfig } from "./GCPProviderTypeConfig";
import type { GoogleAIStudioGeminiProviderTypeConfig } from "./GoogleAIStudioGeminiProviderTypeConfig";
import type { GroqProviderTypeConfig } from "./GroqProviderTypeConfig";
import type { HyperbolicProviderTypeConfig } from "./HyperbolicProviderTypeConfig";
import type { MistralProviderTypeConfig } from "./MistralProviderTypeConfig";
import type { OpenAIProviderTypeConfig } from "./OpenAIProviderTypeConfig";
import type { OpenRouterProviderTypeConfig } from "./OpenRouterProviderTypeConfig";
import type { SGLangProviderTypeConfig } from "./SGLangProviderTypeConfig";
import type { TGIProviderTypeConfig } from "./TGIProviderTypeConfig";
import type { TogetherProviderTypeConfig } from "./TogetherProviderTypeConfig";
import type { VLLMProviderTypeConfig } from "./VLLMProviderTypeConfig";
import type { XAIProviderTypeConfig } from "./XAIProviderTypeConfig";

export type ProviderTypesConfig = { anthropic: AnthropicProviderTypeConfig, azure: AzureProviderTypeConfig, deepseek: DeepSeekProviderTypeConfig, fireworks: FireworksProviderTypeConfig, gcp_vertex_gemini: GCPProviderTypeConfig, gcp_vertex_anthropic: GCPProviderTypeConfig, google_ai_studio_gemini: GoogleAIStudioGeminiProviderTypeConfig, groq: GroqProviderTypeConfig, hyperbolic: HyperbolicProviderTypeConfig, mistral: MistralProviderTypeConfig, openai: OpenAIProviderTypeConfig, openrouter: OpenRouterProviderTypeConfig, sglang: SGLangProviderTypeConfig, tgi: TGIProviderTypeConfig, together: TogetherProviderTypeConfig, vllm: VLLMProviderTypeConfig, xai: XAIProviderTypeConfig, };
