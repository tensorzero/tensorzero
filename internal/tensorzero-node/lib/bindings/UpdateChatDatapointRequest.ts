// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { Input } from "./Input";
import type { ToolCallConfigDatabaseInsert } from "./ToolCallConfigDatabaseInsert";
import type { JsonValue } from "./serde_json/JsonValue";

/**
 * An update request for a chat datapoint.
 * For any fields that are optional in ChatInferenceDatapoint, the request field distinguishes between an omitted field, `null`, and a value:
 * - If the field is omitted, it will be left unchanged.
 * - If the field is specified as `null`, it will be set to `null`.
 * - If the field has a value, it will be set to the provided value.
 *
 * In Rust this is modeled as an `Option<Option<T>>`, where `None` means "unchanged" and `Some(None)` means "set to `null`" and `Some(Some(T))` means "set to the provided value".
 */
export type UpdateChatDatapointRequest = {
  /**
   * The ID of the datapoint to update. Required.
   */
  id: string;
  /**
   * The input of the chat datapoint.
   */
  input?: Input;
  output?: JsonValue | null;
  tool_params?: ToolCallConfigDatabaseInsert | null;
  tags?: { [key in string]?: string } | null;
  is_deleted?: boolean;
  name?: string | null;
};
