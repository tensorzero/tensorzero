include:
  - docker-compose-common.yml

services:
  gateway:
    image: tensorzero/gateway:${TENSORZERO_GATEWAY_TAG:-latest}
    build:
      context: ../..
      dockerfile: gateway/Dockerfile
      target: gateway
    volumes:
      - ./config:/app/config:ro
    environment:
      TENSORZERO_CLICKHOUSE_URL: http://chuser:chpassword@clickhouse:8123/tensorzero_ui_fixtures
      TENSORZERO_POSTGRES_URL: postgres://postgres:postgres@postgres:5432/tensorzero_ui_fixtures
    env_file:
      - .env
      - .env-gateway
    ports:
      - "3000:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "howdy.tensorzero.com:127.0.0.1"
    depends_on:
      clickhouse:
        condition: service_healthy
      gateway-postgres-migrations:
        condition: service_healthy
    command: [ "--config-file", "/app/config/tensorzero.toml" ]
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health" ]
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  fixtures:
    build:
      context: ../../
      dockerfile: ui/fixtures/Dockerfile
    volumes:
      - .:/fixtures
      - ~/.aws:/root/.aws
    env_file:
      - .env
    environment:
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PASSWORD: chpassword
      CLICKHOUSE_USER: chuser
    depends_on:
      gateway:
        condition: service_healthy
      postgres:
        condition: service_healthy
      gateway-postgres-migrations:
        condition: service_healthy
    command: [ "bash", "-c", "cd /fixtures && ./load_fixtures.sh" ]
    healthcheck:
      test: [ "CMD", "test", "-f", "/load_complete.marker" ]
      interval: 5s
      timeout: 1s
      retries: 48 # Retry for up to 4 minutes
      start_interval: 1s
      start_period: 300s # Give the script time to start
