services:
  clickhouse:
    image: clickhouse/clickhouse-server:${TENSORZERO_CLICKHOUSE_VERSION:-24.12-alpine}
    environment:
      CLICKHOUSE_USER: chuser
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_PASSWORD: chpassword
    ports:
      - "8123:8123" # HTTP port
      - "9000:9000" # Native port
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: wget --spider --tries 1 http://chuser:chpassword@clickhouse:8123/ping
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: tensorzero_ui_fixtures
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tensorzero_ui_fixtures"]
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  gateway-postgres-migrations:
    image: tensorzero/gateway:${TENSORZERO_GATEWAY_TAG:-latest}
    environment:
      TENSORZERO_POSTGRES_URL: postgres://postgres:postgres@postgres:5432/tensorzero_ui_fixtures
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command:
      [
        "gateway --run-postgres-migrations && touch /tmp/migrations_complete.marker && sleep infinity",
      ]
    extra_hosts:
      - "howdy.tensorzero.com:127.0.0.1"
    healthcheck:
      test: ["CMD", "test", "-f", "/tmp/migrations_complete.marker"]
      interval: 5s
      timeout: 1s
      retries: 48 # Retry for up to 4 minutes
      start_period: 5s

  gateway:
    image: tensorzero/gateway:${TENSORZERO_GATEWAY_TAG:-latest}
    build:
      context: ../..
      dockerfile: gateway/Dockerfile
      target: gateway
    volumes:
      - ./config:/app/config:ro
    environment:
      TENSORZERO_CLICKHOUSE_URL: http://chuser:chpassword@clickhouse:8123/tensorzero_ui_fixtures
      TENSORZERO_POSTGRES_URL: postgres://postgres:postgres@postgres:5432/tensorzero_ui_fixtures
    env_file:
      - .env
      - .env-gateway
    ports:
      - "3000:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "howdy.tensorzero.com:127.0.0.1"
    depends_on:
      clickhouse:
        condition: service_healthy
      gateway-postgres-migrations:
        condition: service_healthy
    command: ["--config-file", "/app/config/tensorzero.toml"]
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  mock-inference-provider:
    build:
      context: ../../
      dockerfile: tensorzero-core/tests/mock-inference-provider/Dockerfile
    environment:
      RUST_LOG: debug
    ports:
      - "3030:3030"
    healthcheck:
      test: wget --spider --tries 1 http://localhost:3030/status
      interval: 1s
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  fixtures:
    build:
      context: ../../
      dockerfile: ui/fixtures/Dockerfile
    volumes:
      - .:/fixtures
      - ~/.aws:/root/.aws
    env_file:
      - .env
    environment:
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PASSWORD: chpassword
      CLICKHOUSE_USER: chuser
    depends_on:
      gateway:
        condition: service_healthy
      postgres:
        condition: service_healthy
      gateway-postgres-migrations:
        condition: service_healthy
    command: ["bash", "-c", "cd /fixtures && ./load_fixtures.sh"]
    healthcheck:
      test: ["CMD", "test", "-f", "/load_complete.marker"]
      interval: 5s
      timeout: 1s
      retries: 48 # Retry for up to 4 minutes
      start_interval: 1s
      start_period: 300s # Give the script time to start
