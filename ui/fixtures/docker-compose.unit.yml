services:
  clickhouse:
    image: clickhouse/clickhouse-server:${TENSORZERO_CLICKHOUSE_VERSION:-24.12-alpine}
    environment:
      CLICKHOUSE_USER: chuser
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_PASSWORD: chpassword
    volumes:
      - ./config.xml:/etc/clickhouse-server/config.xml:ro
    ports:
      - "8123:8123" # HTTP port
      - "9000:9000" # Native port
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: wget --spider --tries 1 http://chuser:chpassword@clickhouse:8123/ping
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  gateway:
    image: tensorzero/gateway-dev:${TENSORZERO_COMMIT_TAG}
    build:
      context: ../..
      dockerfile: gateway/Dockerfile
      target: gateway
    volumes:
      - ./config:/app/config:ro
    environment:
      TENSORZERO_CLICKHOUSE_URL: http://chuser:chpassword@clickhouse:8123/tensorzero_ui_fixtures
    env_file:
      - .env
      - .env-gateway
    ports:
      - "3000:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "howdy.tensorzero.com:127.0.0.1"
    depends_on:
      clickhouse:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "${TENSORZERO_GATEWAY_URL:-http://localhost:3000}/health",
        ]
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  fixtures:
    image: tensorzero/fixtures:${TENSORZERO_COMMIT_TAG}
    build:
      context: ../..
      dockerfile: ui/fixtures/Dockerfile
    volumes:
      - .:/fixtures
      - ~/.aws:/root/.aws
    environment:
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PASSWORD: chpassword
      CLICKHOUSE_USER: chuser
    depends_on:
      gateway:
        condition: service_healthy
    command: ["bash", "-c", "cd /fixtures && ./load_fixtures.sh"]
    # Added healthcheck to wait for the marker file created by the script
    healthcheck:
      test: ["CMD", "test", "-f", "/load_complete.marker"]
      interval: 5s
      timeout: 1s
      retries: 48 # Retry for up to 4 minutes
      start_interval: 1s
      start_period: 300s # Give the script time to start

  mock-inference-provider:
    image: tensorzero/mock-inference-provider:${TENSORZERO_COMMIT_TAG}
    build:
      context: ../../
      dockerfile: tensorzero-core/tests/mock-inference-provider/Dockerfile
    environment:
      RUST_LOG: debug
    ports:
      - "3030:3030"
    healthcheck:
      test: wget --spider --tries 1 http://localhost:3030/status
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  node-unit-tests:
    image: tensorzero/node-unit-tests:${TENSORZERO_COMMIT_TAG}
    build:
      context: ../.. # Same context as gateway since you need access to the whole monorepo
      dockerfile: ui/fixtures/Dockerfile.unit # Or wherever you put the test Dockerfile
      args:
        NODE_VERSION: ${NODE_VERSION:-22}
        PNPM_VERSION: ${PNPM_VERSION:-9}
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY:-notused}
      FIREWORKS_API_KEY: ${FIREWORKS_API_KEY:-notused}
      TENSORZERO_CLICKHOUSE_URL: http://chuser:chpassword@clickhouse:8123/tensorzero_ui_fixtures
      TENSORZERO_GATEWAY_URL: http://gateway:3000
      TENSORZERO_UI_CONFIG_PATH: /app/ui/fixtures/config/tensorzero.toml
      BUILDKITE_ANALYTICS_TOKEN: ${BUILDKITE_ANALYTICS_TOKEN:-}
      BUILDKITE_COMMIT: ${BUILDKITE_COMMIT:-}
      # For mock server during SFT jobs
      OPENAI_BASE_URL: http://mock-inference-provider:3030/openai
    volumes:
      # Mount config if tests need to read it at runtime
      - ./config:/app/ui/fixtures/config:ro
      # Optional: mount test results output
      - ./test-results:/app/test-results
    depends_on:
      fixtures:
        condition: service_completed_successfully
      gateway:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      mock-inference-provider:
        condition: service_healthy
