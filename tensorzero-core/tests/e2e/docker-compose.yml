include:
  - docker-compose-common.yml

services:
  mock-inference-provider:
    build:
      context: ../../../
      dockerfile: tensorzero-core/tests/mock-inference-provider/Dockerfile
    environment:
      RUST_LOG: debug
    ports:
      - "3030:3030"
    healthcheck:
      test: wget --spider --tries 1 http://localhost:3030/status
      interval: 1s
      start_period: 30s
      start_interval: 1s
      timeout: 1s
  # This is not a gateway to use but rather one that just sets up migrations for the ClickHouse db
  gateway:
    image: tensorzero/gateway:${TENSORZERO_GATEWAY_TAG:-latest}
    build:
      context: ../../..
      dockerfile: gateway/Dockerfile
      target: gateway
    environment:
      TENSORZERO_CLICKHOUSE_URL: http://chuser:chpassword@clickhouse:8123/${TENSORZERO_E2E_TESTS_DATABASE:-tensorzero_e2e_tests}
    depends_on:
      clickhouse:
        condition: service_healthy
    command: ["--default-config"]
    extra_hosts:
      - "howdy.tensorzero.com:127.0.0.1"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      start_period: 1s
      start_interval: 1s
      timeout: 1s
  fixtures:
    build:
      dockerfile: ui/fixtures/Dockerfile
      context: ../../..
    volumes:
      - ../../../ui/fixtures:/fixtures
      - ~/.aws:/root/.aws
    environment:
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PASSWORD=chpassword
      - CLICKHOUSE_USER=chuser
      - TENSORZERO_SKIP_LARGE_FIXTURES
    depends_on:
      gateway:
        condition: service_healthy
    # Keep this running to make 'check-docker-compose.sh' detect that all containers are healthy
    command:
      [
        "bash",
        "-c",
        "cd /fixtures && ./load_fixtures.sh ${TENSORZERO_E2E_TESTS_DATABASE:-tensorzero_e2e_tests} && sleep infinity",
      ]
    healthcheck:
      test: ["CMD", "test", "-f", "/load_complete.marker"]
      interval: 5s
      timeout: 1s
      retries: 48 # Retry for up to 4 minutes
      start_period: 5s # Give the script time to start
