services:
  clickhouse-01:
    image: clickhouse/clickhouse-server:latest
    hostname: clickhouse-01
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./replicated_clickhouse_config/ch1:/etc/clickhouse-server/config.d
      - ./replicated_clickhouse_config/common:/etc/clickhouse-server/users.d
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: wget --spider --tries 1 http://chuser:chpassword@clickhouse-01:8123/ping
      start_period: 30s
      start_interval: 5s
      interval: 10s
      timeout: 5s
      retries: 3

  clickhouse-02:
    image: clickhouse/clickhouse-server:latest
    hostname: clickhouse-02
    ports:
      - "8124:8123" # Host port 8124 -> Container port 8123
      - "9002:9000" # Host port 9001 -> Container port 9000
    volumes:
      - ./replicated_clickhouse_config/ch2:/etc/clickhouse-server/config.d
      - ./replicated_clickhouse_config/common:/etc/clickhouse-server/users.d
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: wget --spider --tries 1 http://chuser:chpassword@clickhouse-02:8123/ping
      start_period: 30s
      start_interval: 5s
      interval: 10s
      timeout: 5s
      retries: 3

  clickhouse-03:
    image: clickhouse/clickhouse-server:latest
    hostname: clickhouse-03
    ports:
      - "8125:8123"
      - "9003:9000"
    volumes:
      - ./replicated_clickhouse_config/ch3:/etc/clickhouse-server/config.d
      - ./replicated_clickhouse_config/common:/etc/clickhouse-server/users.d
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: wget --spider --tries 1 http://chuser:chpassword@clickhouse-03:8123/ping
      start_period: 30s
      start_interval: 5s
      interval: 10s
      timeout: 5s
      retries: 3

  mock-inference-provider:
    build:
      context: ../../../
      dockerfile: tensorzero-core/tests/mock-inference-provider/Dockerfile
    environment:
      RUST_LOG: debug
    ports:
      - "3030:3030"
    healthcheck:
      test: wget --spider --tries 1 http://localhost:3030/status
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  minio:
    image: bitnami/minio:2025.4.22
    ports:
      - "8000:9000" # API port
      - "9001:9001" # Console port
    environment:
      MINIO_ROOT_USER: tensorzero-root
      MINIO_ROOT_PASSWORD: tensorzero-root
      MINIO_DEFAULT_BUCKETS: tensorzero-e2e-tests
    healthcheck:
      test: "mc ls local/tensorzero-e2e-tests || exit 1"
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  jaeger:
    image: jaegertracing/jaeger:2.5.0
    volumes:
      - ./jaeger-config.yaml:/jaeger/config.yaml
    #command: --set=extensions.jaeger_storage.backends.some_store.memory.max_traces=1
    command: --config /jaeger/config.yaml
    ports:
      - "16686:16686" # Browser UI
      - "4317:4317"
      - "4318:4318"
      - "5778:5778"
      - "9411:9411"

  # This is not a gateway to use but rather one that just sets up migrations for the ClickHouse db
  gateway:
    image: tensorzero/gateway:${TENSORZERO_GATEWAY_TAG:-latest}
    build:
      context: ../../..
      dockerfile: gateway/Dockerfile
      target: gateway
    environment:
      TENSORZERO_CLICKHOUSE_URL: http://chuser:chpassword@clickhouse-01:8123/tensorzero_e2e_tests
      TENSORZERO_CLICKHOUSE_CLUSTER_NAME: tensorzero_e2e_tests_cluster
    depends_on:
      clickhouse-01:
        condition: service_healthy
    entrypoint: /bin/bash
    command: -c "gateway --run-migrations-only && gateway --default-config"
    extra_hosts:
      - "howdy.tensorzero.com:127.0.0.1"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      start_period: 1s
      start_interval: 1s
      timeout: 1s
  fixtures:
    build:
      dockerfile: ../../../ui/fixtures/Dockerfile
    volumes:
      - ../../../ui/fixtures:/fixtures
      - ~/.aws:/root/.aws
    environment:
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_HOST=clickhouse-01
      - CLICKHOUSE_PASSWORD=chpassword
      - CLICKHOUSE_USER=chuser
      - TENSORZERO_SKIP_LARGE_FIXTURES
    depends_on:
      gateway:
        condition: service_healthy
    # Keep this running to make 'check-docker-compose.sh' detect that all containers are healthy
    command:
      [
        "bash",
        "-c",
        "cd /fixtures && ./load_fixtures.sh tensorzero_e2e_tests && sleep infinity",
      ]
    healthcheck:
      test: ["CMD", "test", "-f", "/load_complete.marker"]
      interval: 5s
      timeout: 1s
      retries: 48 # Retry for up to 4 minutes
      start_period: 5s # Give the script time to start
