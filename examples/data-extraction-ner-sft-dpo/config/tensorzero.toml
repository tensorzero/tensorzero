# ┌────────────────────────────────────────────────────────────────────────────┐
# │                                 FUNCTIONS                                  │
# └────────────────────────────────────────────────────────────────────────────┘

[functions.extract_entities]
type = "json"
output_schema = "functions/extract_entities/output_schema.json"

[functions.extract_entities.variants.gpt_4_1]
type = "chat_completion"
model = "openai::gpt-4.1-2025-04-14"
system_template = "functions/extract_entities/initial_prompt/system_template.minijinja"
json_mode = "strict"

[functions.extract_entities.variants.gpt_4_1_mini]
type = "chat_completion"
model = "openai::gpt-4.1-mini-2025-04-14"
system_template = "functions/extract_entities/initial_prompt/system_template.minijinja"
json_mode = "strict"

# TODO: Once you've fine-tuned with SFT, add it here like the commented example below

#[functions.extract_entities.variants.gpt_4_1_mini_sft]
#type = "chat_completion"
#model = "openai::ft:gpt-4.1-mini-2025-04-14:xxxxxxxx::xxxxxxxx"
#system_template = "functions/extract_entities/initial_prompt/system_template.minijinja"
#json_mode = "strict"

# TODO: Once you've fine-tuned with DPO, add it here

#[functions.extract_entities.variants.gpt_4_1_mini_sft_dpo]
#type = "chat_completion"
#model = "openai::ft:gpt-4.1-mini-2025-04-14:xxxxxxxx::xxxxxxxx"
#system_template = "functions/extract_entities/initial_prompt/system_template.minijinja"
#json_mode = "strict"

#[functions.extract_entities.variants.gpt_4_1_mini_dicl]
#type = "experimental_dynamic_in_context_learning"
#embedding_model = "openai::text-embedding-3-small"
#model = "openai::gpt-4.1-mini-2025-04-14"
#k = 10
#system_instructions = "functions/extract_entities/initial_prompt/system_template.minijinja"
#json_mode = "strict"

# ┌────────────────────────────────────────────────────────────────────────────┐
# │                                  METRICS                                   │
# └────────────────────────────────────────────────────────────────────────────┘

[metrics.exact_match]
type = "boolean"
level = "inference"
optimize = "max"

[metrics.jaccard_similarity]
type = "float"
level = "inference"
optimize = "max"

[metrics.valid_output]
type = "boolean"
level = "inference"
optimize = "max"
