# ┌────────────────────────────────────────────────────────────────────────────┐
# │                                  GENERAL                                   │
# └────────────────────────────────────────────────────────────────────────────┘

# To keep things minimal in this example, we don't set up observability with ClickHouse.

[gateway]
observability.enabled = false

# ┌────────────────────────────────────────────────────────────────────────────┐
# │                                 FUNCTIONS                                  │
# └────────────────────────────────────────────────────────────────────────────┘

[functions.multi_hop_rag_agent]
type = "chat"
tools = ["think", "search_wikipedia", "load_wikipedia_page", "answer_question"]
tool_choice = "required"
parallel_tool_calls = true

[functions.multi_hop_rag_agent.variants.baseline]
type = "chat_completion"
model = "openai::gpt-4o-mini"
system_template = "functions/multi_hop_rag_agent/baseline/system_template.txt"

# ┌────────────────────────────────────────────────────────────────────────────┐
# │                                   TOOLS                                    │
# └────────────────────────────────────────────────────────────────────────────┘

[tools.think]
description = "Think about the question and the information you have gathered so far. This is a good time to plan your next steps."
parameters = "tools/think.json"
strict = true

[tools.search_wikipedia]
description = "Search Wikipedia for pages that match the query. Returns a list of page titles."
parameters = "tools/search_wikipedia.json"
strict = true

[tools.load_wikipedia_page]
description = "Load a Wikipedia page. Returns the page content, or an error if the page does not exist."
parameters = "tools/load_wikipedia_page.json"
strict = true

[tools.answer_question]
description = "End the search process and answer a question. Returns the answer to the question."
parameters = "tools/answer_question.json"
strict = true
