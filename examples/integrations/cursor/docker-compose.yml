services:
  clickhouse:
    image: clickhouse/clickhouse-server:24.12-alpine
    environment:
      - CLICKHOUSE_USER=chuser
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_PASSWORD=chpassword
    ports:
      - "6902:8123" # HTTP port exposed to local machine on 6902
      - "6903:9000" # Native port exposed to local machine on 6903
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: wget --spider --tries 1 http://chuser:chpassword@clickhouse:8123/ping
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  gateway:
    image: tensorzero/gateway
    build:
      context: ../..
      dockerfile: gateway/Dockerfile
      target: gateway
    volumes:
      - ./config:/app/config:ro
      - ${GCP_VERTEX_CREDENTIALS_PATH:-/dev/null}:/app/gcp-credentials.json:ro
    command: --config-file /app/config/tensorzero.toml
    environment:
      - TENSORZERO_CLICKHOUSE_URL=http://chuser:chpassword@clickhouse:8123/tensorzero
      - GCP_VERTEX_CREDENTIALS_PATH=${GCP_VERTEX_CREDENTIALS_PATH:+/app/gcp-credentials.json}
    env_file:
      - ${ENV_FILE:-.env}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "6900:3000"
    depends_on:
      clickhouse:
        condition: service_healthy
    healthcheck:
      test: wget http://gateway:3000/health
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  ui:
    image: tensorzero/ui
    volumes:
      - ./config:/app/config:ro
    environment:
      - TENSORZERO_CLICKHOUSE_URL=http://chuser:chpassword@clickhouse:8123/tensorzero
      - TENSORZERO_GATEWAY_URL=http://gateway:3000
    env_file:
      - ${ENV_FILE:-.env}
    ports:
      - "6901:4000" # UI port exposed to local machine on 6901
    depends_on:
      clickhouse:
        condition: service_healthy
      gateway:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    volumes:

      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
      - ./nginx/entrypoint.sh:/entrypoint.sh
    environment:
      - API_TOKEN=${API_TOKEN}
    command: /bin/sh -c "/entrypoint.sh nginx -g 'daemon off;'"
    depends_on:
      gateway:
        condition: service_healthy

  ngrok:
    image: ngrok/ngrok:latest
    depends_on:
      nginx:
        condition: service_started
    environment:
      # Make sure NGROK_AUTHTOKEN is set in your environment or .env file
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command: http nginx:80
    ports:
      - "4040:4040" # ngrok port exposed to local machine on 4040
