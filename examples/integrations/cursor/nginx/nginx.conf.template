events {}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent"';
    access_log /var/log/nginx/access.log main;

    map $http_authorization $is_authorized {
        default                     0;
        "~*^Bearer ${API_TOKEN}$"   1;
    }

    server {
        listen 80;

        # --- CORS helper macro ---
        set $CORS_ALLOW_ORIGIN  "$http_origin";   # reflect the caller’s origin
        set $CORS_ALLOW_HEADERS "Authorization,Content-Type";

        location / {
            # --- pre‑flight ---
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin      "$CORS_ALLOW_ORIGIN" always;
                add_header Access-Control-Allow-Credentials "true" always;
                add_header Access-Control-Allow-Methods     "GET,POST,OPTIONS" always;
                add_header Access-Control-Allow-Headers     "$CORS_ALLOW_HEADERS" always;
                add_header Access-Control-Max-Age           86400 always;
                return 204;
            }

            # --- authenticated requests ---
            if ($is_authorized = 0) {
                return 401;
            }

            # Proxy configuration
            proxy_pass       http://gateway:3000;
            proxy_set_header Host $host;

            # Add CORS headers to response
            add_header Access-Control-Allow-Origin      "$CORS_ALLOW_ORIGIN" always;
            add_header Access-Control-Allow-Credentials "true" always;
        }
    }
}
