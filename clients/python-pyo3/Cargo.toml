[package]
# This is the name of the Rust crate (which shows up in the cargo output)
# It's named 'tensorzero_python' to avoid confusion with the Rust client
# (which has a crate name of 'tensorzero')
name = "tensorzero_python"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
# This is used by 'maturin' as the name of the Python package
# This is 'tensorzero' (unsuffixed), so that Python code can write 'import tensorzero'
name = "tensorzero"
crate-type = ["cdylib"]

[dependencies]
futures = { workspace = true }
pyo3 = { workspace = true }
pyo3-async-runtimes = { version = "0.23.0", features = ["tokio-runtime"] }
serde.workspace = true
serde_json.workspace = true
tensorzero_rust = { package = "tensorzero", path = "../rust", features = [
    "pyo3",
] }
tokio.workspace = true
url.workspace = true
uuid.workspace = true

[features]
# Forward these features to the rust client, so that the embedded gateway
# has the `e2e_tests` feature enabled when we run our e2e tests
# We also set 'pyo3/extension-module' so that 'maturin develop --features e2e_tests'
# will work correctly.
e2e_tests = ["tensorzero_rust/e2e_tests", "pyo3/extension-module"]
batch_tests = ["tensorzero_rust/batch_tests"]
